ARG PHP_VERSION=8
FROM php:${PHP_VERSION}-zts
LABEL org.opencontainers.image.description="PHP base image with commonly used extensions pre-installed" \
     "com.koalaphils.vendor"="Koala Software Technology Innovations" \
     "com.koalaphils.image.author"="mdprotacio@outlook.com"

RUN set -eux; \
  apt-get update \
  && LIBAVIF=`apt-cache pkgnames libavif | sort -V | head -1` \
  && LIBEVENTEXTRA=`apt-cache pkgnames libevent-extra | sort -V | head -1` \
  && LIBEVENTOPENSSL=`apt-cache pkgnames libevent-openssl | sort -V | head -1` \
  && LIBEVENTPTHREADS=`apt-cache pkgnames libevent-pthreads | sort -V | head -1` \
  && LIBLZ4=`apt-cache pkgnames liblz4 | sort -V | head -1` \
  && apt-get install --no-install-recommends -y \
    git \
    imagemagick \
    ${LIBAVIF} \
    libc-ares2 \
    libcmph0 \
    libedit2 \
    ${LIBEVENTEXTRA} \
    ${LIBEVENTOPENSSL} \
    ${LIBEVENTPTHREADS} \
    libhashkit2 \
    libjpeg62-turbo \
    libmemcached11 \
    libmemcachedutil2 \
    ${LIBLZ4} \
    libmcrypt4 \
    libmsgpackc2 \
    libpng16-16 \
    libsodium23 \
    libxpm4 \
    libzip4 \
    netcat-traditional \
    tzdata \
    unixodbc \
    unzip \
    wget \
    zlib1g \
  ; \
  apt-mark manual '.*' > /dev/null; \
  savedAptMark="$(apt-mark showmanual)"; \
  apt-get install -y --no-install-recommends \
    $PHPIZE_DEPS \
    gettext-base \
    libargon2-dev \
    libavif-dev \
    libc-ares-dev \
    libcmph-dev \
    libcurl4-openssl-dev \
    libedit-dev \
    libevent-dev \
    libfreetype-dev \
    libicu-dev \
    libjpeg-dev \
    libjpeg62-turbo-dev \
    liblz4-dev \
    libmagick++-dev \
    libmagickwand-dev \
    libmcrypt-dev \
    libmemcached-dev \
    libmsgpack-dev \
    libonig-dev \
    libpng-dev \
    libpng++-dev \
    libsodium-dev \
    libssl-dev \
    libwebp-dev \
    libxml2-dev \
    libxpm-dev \
    libzip-dev \
    libbz2-dev \
    unixodbc-dev \
    zlib1g-dev \
    ${PHP_EXTRA_BUILD_DEPS:-} \
  ; export CFLAGS="$PHP_CFLAGS" CPPFLAGS="$PHP_CPPFLAGS" LDFLAGS="$PHP_LDFLAGS" \
  ; set +e \
  ; if dpkg --compare-versions ${PHP_VERSION} ge 8.1; then WITH_AVIF=--with-avif; else WITH_AVIF=; fi \
  ; if dpkg --compare-versions ${PHP_VERSION} ge 7.4; then WITH_PARAMS="--with-jpeg --with-xpm --with-webp --with-freetype ${WITH_AVIF}"; \
    else WITH_PARAMS="--with-jpeg-dir=/usr/include --with-png-dir=/usr/include --with-webp-dir=/usr/include --with-freetype-dir=/usr/include --with-xpm-dir=/usr/include"; fi \
  ; set -e \
  ; \
  docker-php-ext-configure gd ${WITH_PARAMS} \
    ; \
  docker-php-ext-install -j$(nproc) gd \
    ; \
  docker-php-ext-install -j$(nproc) \
    bcmath \
    dba \
    gettext \
    intl \
    mysqli \
    opcache \
    pcntl \
    pdo_mysql \
    xml \
    zip \
    ; \
  rm -rf $PHP_INI_DIR/conf.d/docker-php-ext-*.ini \
    ; \
  docker-php-ext-enable sodium \
    ; \
  docker-php-ext-install -j$(nproc) \
    --ini-name 0-docker-php-ext-sockets.ini \
    sockets \
    ; \
  pecl update-channels \
    ; \
  pecl install --onlyreqdeps --nobuild apcu; \
    cd "$(pecl config-get temp_dir)/apcu"; \
    phpize; \
    ./configure --enable-apcu; \
    make && make install || exit 1; \
    cd -; \
  pecl install --onlyreqdeps --nobuild igbinary; \
    cd "$(pecl config-get temp_dir)/igbinary"; \
    phpize; \
    ./configure; \
    make && make install || exit 1; \
    cd -; \
  pecl install --onlyreqdeps --nobuild msgpack; \
    cd "$(pecl config-get temp_dir)/msgpack"; \
    phpize; \
    ./configure; \
    make && make install || exit 1; \
    cd -; \
  set +e; \
  if dpkg --compare-versions ${PHP_VERSION} lt 8.3; then \
  pecl install --onlyreqdeps --nobuild imagick; \
    cd "$(pecl config-get temp_dir)/imagick"; \
    phpize; \
    ./configure; \
    make && make install || exit 1; \
    cd -; \
  pecl install --onlyreqdeps --nobuild sqlsrv; \
    cd "$(pecl config-get temp_dir)/sqlsrv"; \
    phpize; \
    ./configure; \
    make && make install || exit 1; \
    cd -; \
  pecl install --onlyreqdeps --nobuild pdo_sqlsrv; \
    cd "$(pecl config-get temp_dir)/pdo_sqlsrv"; \
    phpize; \
    ./configure; \
    make && make install || exit 1; \
    cd -; \
  fi; \
  set -e; \
  pecl install --onlyreqdeps --nobuild redis; \
    cd "$(pecl config-get temp_dir)/redis"; \
    phpize; \
    ./configure --enable-redis-igbinary --enable-redis-json --enable-redis-msgpack --enable-redis-lz4 --with-liblz4=/usr/include; \
    make && make install || exit 1; \
    cd -; \
  pecl install --onlyreqdeps --nobuild memcached; \
    cd "$(pecl config-get temp_dir)/memcached"; \
    phpize; \
    ./configure --enable-memcached-igbinary --enable-memcached-json --enable-memcached-session --enable-memcached-sasl --enable-memcached-msgpack; \
    make && make install || exit 1; \
    cd -; \
  pecl install --onlyreqdeps --nobuild xhprof; \
    cd "$(pecl config-get temp_dir)/xhprof/extension"; \
    phpize; \
    ./configure; \
    make && make install || exit 1; \
    cd -; \
  pecl install --onlyreqdeps --nobuild xdebug; \
    cd "$(pecl config-get temp_dir)/xdebug"; \
    phpize; \
    ./configure; \
    make && make install || exit 1; \
    cd -; \
  pecl install --onlyreqdeps --nobuild event; \
    cd "$(pecl config-get temp_dir)/event"; \
    phpize; \
    ./configure --with-event-core --enable-event-sockets --with-event-openssl --with-event-extra; \
    make && make install || exit 1; \
    cd -; \
  set +e; \
    if dpkg --compare-versions ${PHP_VERSION} lt 8.3; then \
      pecl install --onlyreqdeps --nobuild mcrypt; \
      cd "$(pecl config-get temp_dir)/mcrypt"; \
      phpize; \
      ./configure; \
      make && make install || exit 1; \
      cd -; \
    fi; \
  set -e; \
  pecl install --onlyreqdeps --nobuild ast; \
    cd "$(pecl config-get temp_dir)/ast"; \
    phpize; \
    ./configure; \
    make && make install || exit 1; \
    cd -; \
  pecl install --onlyreqdeps --nobuild pcov; \
    cd "$(pecl config-get temp_dir)/pcov"; \
    phpize; \
    ./configure; \
    make && make install || exit 1; \
    cd -; \
#  pecl install --onlyreqdeps --nobuild swoole; \
#    cd "$(pecl config-get temp_dir)/swoole"; \
#    phpize; \
#    ./configure --enable-sockets --enable-openssl --enable-thread-context --enable-cares; \
#    make && make install || exit 1; \
#    cd -; \
  docker-php-ext-enable --ini-name 0-docker-php-ext-igbinary.ini igbinary; \
  docker-php-ext-enable --ini-name 0-docker-php-ext-msgpack.ini msgpack; \
  cp /usr/bin/envsubst /usr/local/bin/envsubst; \
  apt-mark auto '.*' > /dev/null; \
  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
  find /usr/local -type f -executable -exec ldd '{}' ';' \
      | awk '/=>/ { print $(NF-1) }' \
      | sort -u \
      | xargs -r dpkg-query --search \
      | cut -d: -f1 \
      | sort -u \
      | xargs -r apt-mark manual \
  ; \
  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImport=false; \
  rm -rf /tmp/* ~/.pearrc /var/lib/apt/lists/* /var/cache/*; \
  php --version \
  ; mv $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini \
  ; sed -i "s|^expose_php\s*=\s*\(.*\)|expose_php=Off|g" $PHP_INI_DIR/php.ini \
  ; sed -i "s|^\(;\)*realpath_cache_size\s*=\s*\(.*\)|realpath_cache_size=\2|g" $PHP_INI_DIR/php.ini \
  ; sed -i "s|^\(;\)*realpath_cache_ttl\s*=\s*\(.*\)|realpath_cache_ttl=\2|g" $PHP_INI_DIR/php.ini \
  ;
RUN docker-php-ext-enable  \
    apcu \
    memcached \
    opcache \
    redis \
    xdebug \
    xhprof \
    ;
COPY --from=composer/composer /usr/bin/composer /usr/local/bin/composer
RUN composer config --global use-github-api false
WORKDIR /var/www/html
CMD ["php", "-a"]
