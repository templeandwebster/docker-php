ARG PHP_VERSION=8
FROM php:${PHP_VERSION}-cli-alpine
LABEL org.opencontainers.image.description="PHP base image with commonly used extensions pre-installed" \
     "com.koalaphils.vendor"="Koala Software Technology Innovations" \
     "com.koalaphils.image.author"="mdprotacio@outlook.com"

RUN set -eux; \
  apk update \
  && apk add --no-cache \
    bash \
    c-ares \
    freetype \
    git \
    imagemagick \
    libavif \
    libcmph \
    libedit \
    libevent \
    libjpeg-turbo \
    libmcrypt \
    libmemcached \
    libmemcached-libs \
    libpng \
    libsodium \
    libxpm \
    libzip \
    lz4-libs \
    mpdecimal \
    msgpack-c \
    netcat-openbsd \
    tzdata \
    unzip \
    zlib \
  ; \
  apk add --no-cache --virtual .build-deps \
    $PHPIZE_DEPS \
    argon2-dev \
    c-ares-dev \
    curl-dev \
    cyrus-sasl-dev \
    freetype-dev \
    gettext-dev \
    icu-dev \
    imagemagick-dev \
    jpeg-dev \
    libavif-dev \
    libedit-dev \
    libevent-dev \
    libjpeg-turbo-dev \
    libmcrypt-dev \
    libmemcached-dev \
    linux-headers \
    libpng-dev \
    libsodium-dev \
    libwebp-dev \
    libxml2-dev \
    libxpm-dev \
    libzip-dev \
    lz4-dev \
    mpdecimal-dev \
    msgpack-c-dev \
    oniguruma-dev \
    openssl-dev \
    zlib-dev \
    ${PHP_EXTRA_BUILD_DEPS:-} \
  ; export CFLAGS="$PHP_CFLAGS" CPPFLAGS="$PHP_CPPFLAGS" LDFLAGS="$PHP_LDFLAGS" \
  ; set +e \
  ; $(dpkg --compare-versions ${PHP_VERSION} ge 8.1) \
  ; if [ "$?" -eq "0" ]; then WITH_AVIF=--with-avif; else WITH_AVIF=; fi \
  ; $(dpkg --compare-versions ${PHP_VERSION} ge 7.4) \
  ; if [ "$?" -eq "0" ]; then WITH_PARAMS="--with-jpeg --with-xpm --with-webp --with-freetype ${WITH_AVIF}"; \
    else WITH_PARAMS="--with-jpeg-dir=/usr/include --with-png-dir=/usr/include --with-webp-dir=/usr/include --with-freetype-dir=/usr/include --with-xpm-dir=/usr/include"; fi \
  ; set -e \
  ; \
  docker-php-ext-configure gd ${WITH_PARAMS} \
    ; \
  docker-php-ext-install -j$(nproc) gd \
    ; \
  docker-php-ext-install -j$(nproc) \
    bcmath \
    gettext \
    intl \
    mysqli \
    opcache \
    pcntl \
    pdo_mysql \
    zip \
    ; \
  rm -rf $PHP_INI_DIR/conf.d/docker-php-ext-*.ini \
    ; \
  docker-php-ext-enable sodium \
    ; \
  docker-php-ext-install -j$(nproc) \
    --ini-name 0-docker-php-ext-sockets.ini \
    sockets \
    ; \
  pecl update-channels \
    ; \
  pecl install --onlyreqdeps --nobuild apcu; \
    cd "$(pecl config-get temp_dir)/apcu"; \
    phpize; \
    ./configure --enable-apcu; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild decimal; \
    cd "$(pecl config-get temp_dir)/decimal"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild igbinary; \
    cd "$(pecl config-get temp_dir)/igbinary"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild msgpack; \
    cd "$(pecl config-get temp_dir)/msgpack"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild imagick; \
    cd "$(pecl config-get temp_dir)/imagick"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild redis; \
    cd "$(pecl config-get temp_dir)/redis"; \
    phpize; \
    ./configure --enable-redis-igbinary --enable-redis-json --enable-redis-msgpack --enable-redis-lz4 --with-liblz4=/usr/include; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild memcached; \
    cd "$(pecl config-get temp_dir)/memcached"; \
    phpize; \
    ./configure --enable-memcached-igbinary --enable-memcached-json --enable-memcached-session --enable-memcached-sasl --enable-memcached-msgpack; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild xhprof; \
    cd "$(pecl config-get temp_dir)/xhprof/extension"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  set +e; \
  $(dpkg --compare-versions ${PHP_VERSION} lt 8) \
  ; if [ "$?" -eq "0" ]; then pecl install --onlyreqdeps --nobuild xdebug-3.1.6; \
    else pecl install --onlyreqdeps --nobuild xdebug; \
    fi; \
  set -e; \
    cd "$(pecl config-get temp_dir)/xdebug"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild event; \
    cd "$(pecl config-get temp_dir)/event"; \
    phpize; \
    ./configure --with-event-core --enable-event-sockets --with-event-openssl --with-event-extra; \
    make && make install; \
    cd -; \
  set +e; \
  $(dpkg --compare-versions ${PHP_VERSION} lt 8.2) \
  ; if [ "$?" -eq "0" ]; then \
  pecl install --onlyreqdeps --nobuild mcrypt; \
    cd "$(pecl config-get temp_dir)/mcrypt"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  fi; \
  set -e; \
  pecl install --onlyreqdeps --nobuild ast; \
    cd "$(pecl config-get temp_dir)/ast"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild pcov; \
    cd "$(pecl config-get temp_dir)/pcov"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild openswoole; \
    cd "$(pecl config-get temp_dir)/openswoole"; \
    phpize; \
    ./configure --enable-sockets --enable-openssl --enable-http2 --enable-hook-curl --enable-thread-context --enable-cares; \
    make && make install; \
    cd -; \
  docker-php-ext-enable --ini-name 0-docker-php-ext-igbinary.ini igbinary; \
  docker-php-ext-enable --ini-name 0-docker-php-ext-msgpack.ini msgpack; \
  cp /usr/bin/envsubst /usr/local/bin/envsubst; \
  runDeps="$( \
      scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \
          | tr ',' '\n' \
          | sort -u \
          | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
  )"; \
  apk add --no-cache $runDeps; \
  \
  apk del --no-network .build-deps; \
  rm -rf /tmp/* ~/.pearrc; \
  php --version \
  ; mv $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini \
  ; sed -i "s|^expose_php\s*=\s*\(.*\)|expose_php=Off|g" $PHP_INI_DIR/php.ini \
  ; sed -i "s|^\(;\)*realpath_cache_size\s*=\s*\(.*\)|realpath_cache_size=\2|g" $PHP_INI_DIR/php.ini \
  ; sed -i "s|^\(;\)*realpath_cache_ttl\s*=\s*\(.*\)|realpath_cache_ttl=3600|g" $PHP_INI_DIR/php.ini \
  ; sed -i "s|^\(;\)*zlib.output_compression\s*=\s*\(.*\)|zlib.output_compression=On|g" $PHP_INI_DIR/php.ini \
  ;
RUN docker-php-ext-enable  \
    apcu \
    memcached \
    opcache \
    redis \
    xdebug \
    xhprof \
    ;
COPY --from=composer/composer /usr/bin/composer /usr/local/bin/composer
RUN composer config --global use-github-api false
WORKDIR /var/www/html
CMD ["php", "-a"]
